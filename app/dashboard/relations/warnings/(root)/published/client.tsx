'use client'
import { useInfiniteData } from "@/app/_hook/useInfiniteData";
import ExportBtn from "@/components/page";
import EmployeeProfile from "@/components/profile/page";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { cn } from "@/lib/utils";
import { WarningType } from "@/types";
import moment from "moment";
import { Metadata } from "next";
import Link from "next/link";
import { useSearchParams } from "next/navigation";

export const metadata: Metadata = {
  title: "Leave request",
  description: "Generated by create next app",
  icons: {
    icon: "/vite.svg",
  },
};

function RelationsWarningsPublishedClient() {
  const params = useSearchParams();
  const department = params.get("department");
  const pending = params.get("pending");
  const { data, loading, queryKey, lastElementRef, count } =
    useInfiniteData<WarningType>({
      keys: "warnings",
      size: 20,
      params: { department, pending },
    });

  return (
    <div className="w-full h-full">
      <div className="py-2 flex items-center justify-between px-8">
        <div>
          <p className="font-bold text-lg">Warning {count}</p>
          <p className="text-xs inactive-text">Manage all employee warnings.</p>
        </div>
        <div className="flex items-center space-x-2">
          <Link
            href={pending === "true" ? "?pending=false" : "?pending=true"}
            className="flex items-center space-x-2 px-2"
          >
            <Switch checked={pending === "true"} id="pending" />
            <Label htmlFor="pending">Pending</Label>
          </Link>
          <ExportBtn data={JSON.stringify(data)} title={"warnings"} />
        </div>
      </div>
      <div className="gap-4 p-4 flex flex-wrap">
        {data.map((l, k) => {
          return (
            <div
              key={k}
              className={cn(
                "mb-1 p-4 flex transition-all duration-75 ease-in-out flex-row justify-between flex-1 min-w-[300px] hover:shadow-lg rounded-sm",
                l.status === "pending" ? "nav-bg nav-hover" : "hover"
              )}
            >
              <EmployeeProfile
                description={l.title}
                employee={l.employee}
                ago={moment(l.createdAt).fromNow()}
                to={`/dashboard/relations/warnings/detail/${l._id}`}
              />
              <p className="h-4 capitalize text-xs">{l.status}</p>
            </div>
          );
        })}
        {count > data.length && (
          <div ref={lastElementRef} className="w-full h-10"></div>
        )}
      </div>
    </div>
  );
}

export default RelationsWarningsPublishedClient;
